<script>
	// 管理账号信息缓存
	import service from 'service.js';
	import {mapState,mapMutations} from 'vuex';
	import request from '@/request/request.js';
	export default {
		methods:{
			...mapMutations(['login','setInfo','addFriendFromCache','addFinds'])
		},
		computed:{
			...mapState(['userInfo','findLists'])
		},
		onLaunch: function() {
			// 显示好友圈的小红点
			// uni.showTabBarRedDot({
			// 	index: 2
			// });
			console.log('App Launch');
			//在加载函数中监听缓存，管理登陆状态，如果缓存中有用户登录信息，就不必要每次打开应用都需要登录
			let userInfo = service.getUsers();
			userInfo=userInfo[0];
			console.log("读取缓存："+JSON.stringify(userInfo));
			// 将用户信息写入state
			this.setInfo(userInfo);
			// 登录
			userInfo ? 	this.login() : null;
			// 从缓存中读取好友列表
			this.addFriendFromCache(service.getFriends());
			console.log("缓存读取好友列表");
			// 从缓存中读取好友圈
			this.addFinds(service.getFinds());
			console.log("缓存读取好友圈");
			// 长轮询，如果好友圈发生变化则显示小红点
			setInterval(()=>{
				request.getLatestFinds((data)=>{
					console.log("长轮询");
					if(data.length != this.findLists.length){
						// 显示好友圈的小红点
						uni.showTabBarRedDot({
							index: 2
						});
					}
				});
			},30000);
		},
		onShow: function() {
			console.log('App Show');
		},
		onHide: function() {
			console.log('App Hide');
		}
	}
</script>

<style>
	/*每个页面公共css */
	@import url("common/common.css");
	
</style>
