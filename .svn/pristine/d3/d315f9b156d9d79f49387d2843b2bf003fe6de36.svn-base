// 登录状态管理
import Vue from 'vue'
import Vuex from 'vuex'
// 告诉 vue “使用” vuex
Vue.use(Vuex)

const store = new Vuex.Store({
    state: {	//全局变量定义处
        /**
         * 是否需要强制登录,是 true
         */
        forcedLogin: true,
		// 是否已经登录
        hasLogin: false,
		// PHP服务器地址
		serverUrl:'http://192.168.10.136',
		// websocket服务器地址
		websocketUrl:'ws://192.168.10.136:3000',
		// 用户信息
        userInfo: {
			name:'',
			motto:'',
			account:'',
			avatarUrl:'',
			// 是否微信登录
			wxId:'',
			phone:''
		},
		// 临时用户信息(搜索)
		tempInfo: {
			name:'',
			motto:'',
			account:'',
			avatarUrl:'',
			wxId:'',
			phone:''
		},
		// 好友列表
		myFriends:new Map()
    },
    mutations: {
		// 登录
        login(state, userName) {
			console.log(userName);
            state.userInfo.name = userName;
            state.hasLogin = true;
        },
		// 退出登录
        logout(state) {
            state.userInfo.name = "";
            state.hasLogin = false;
        },
		// 设置用户信息
		setInfo(state,obj){
			for (let s in obj) {
				state.userInfo[s] = obj[s];
				console.log("存入了"+s+":"+obj[s]);
			}
		},
		// 设置搜索到的用户信息
		setInfoTemp(state,obj){
			for (let s in obj) {
				state.tempInfo[s] = obj[s];
				console.log("临时存入了"+s+":"+obj[s]);
			}
		},
		// 添加好友
		addFriend(state,obj){
			state.myFriends.set(obj.account,obj);
			console.log("添加了好友"+obj.name);
			for (let s of state.myFriends.entries()) {
				console.log(s[0],s[1]);
			}
		},
		// 删除好友
		deleteFriend(state,obj){
			state.myFriends.delete(obj.account);
			console.log("删除了好友"+obj.name);
		}
    },
})

export default store
