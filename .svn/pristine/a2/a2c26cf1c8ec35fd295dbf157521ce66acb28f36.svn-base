// 登录状态管理
import Vue from 'vue'
import Vuex from 'vuex'
// 告诉 vue “使用” vuex
Vue.use(Vuex)

const store = new Vuex.Store({
    state: {	//全局变量定义处
        /**
         * 是否需要强制登录,是 true
         */
        forcedLogin: true,
		// 是否已经登录
        hasLogin: false,
		// PHP服务器地址
		serverUrl:'http://192.168.10.136',
		// websocket服务器地址
		websocketUrl:'ws://192.168.10.136:8848',
		// 用户信息
        userInfo: {
			name:'',
			motto:'',
			account:'',
			avatarUrl:'',
			// 是否微信登录
			wxId:'',
			phone:''
		},
		// 临时用户信息(搜索)
		tempInfo: {
			name:'',
			motto:'',
			account:'',
			avatarUrl:'',
			wxId:'',
			phone:''
		},
		// 好友列表
		myFriends:[
					// [
					// 	75443327,{
					// 	name:"枯藤星际",
					// 	motto:"蒸羊羔蒸熊掌蒸鹿尾烧花鸭烧雏鸡烧子鹅卤煮",
					// 	avatarUrl:"/static/img/avatar.png",
					// 	phone:18666666666,
					// 	account:75443327,
					// 	wxId:"",
					// 	}
					// ]
				]
    },
    mutations: {
		// 登录
        login(state, userName) {
			console.log(userName);
            state.userInfo.name = userName;
            state.hasLogin = true;
        },
		// 退出登录
        logout(state) {
            state.userInfo.name = "";
            state.hasLogin = false;
        },
		// 设置用户信息
		setInfo(state,obj){
			for (let s in obj) {
				state.userInfo[s] = obj[s];
				console.log("存入了"+s+":"+obj[s]);
			}
		},
		// 设置搜索到的用户信息
		setInfoTemp(state,obj){
			for (let s in obj) {
				state.tempInfo[s] = obj[s];
				console.log("临时存入了"+s+":"+obj[s]);
			}
		},
		// 添加好友
		addFriend(state,obj){
			let uid=[];
			let f=[];
			for (let i in state.myFriends) {
				uid.push(state.myFriends[i][0]);
				f.push(state.myFriends[i][1]);
			}
			// 如果好友已存在
			if (uid.includes(obj.account)) {
				console.log("已经是好友了");
			} else{
				// 对象的深拷贝!!!
				state.myFriends.push([obj.account,JSON.parse(JSON.stringify(obj))]);
			}
			console.log("添加了好友"+obj.name);
			console.log(JSON.stringify(state.myFriends));
		},
		// 删除好友
		deleteFriend(state,obj){
			let uid=[];
			let f=[];
			for (let i in state.myFriends) {
				uid.push(state.myFriends[i][0]);
				f.push(state.myFriends[i][1]);
			}
			for (let i in uid) {
				if (uid[i]==obj.account) {
					// 高阶函数删除数组项
					state.myFriends=state.myFriends.filter((item)=>item[0]!=uid[i]);
				} else{
					console.log("好友不存在");
				}
			}
			console.log("删除了好友"+obj.name);
			console.log(JSON.stringify(state.myFriends));
		},
		// 从缓存列表加载好友
		addFriendFromCache(state,lists){
			// 深拷贝
			state.myFriends=JSON.parse(JSON.stringify(lists));
		},
		// 清空好友列表
		deleteAllFriend(state){
			state.myFriends.length=0;
			console.log("好友列表已清空");
		}
    },
	getters:{
		serverUrl:(state)=>state.serverUrl,
		userInfo:(state)=>state.userInfo,
		tempInfo:(state)=>state.tempInfo
	}
})

export default store
