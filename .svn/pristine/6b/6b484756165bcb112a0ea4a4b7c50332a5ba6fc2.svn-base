<template>
	<!-- 我的发表列表 -->
	<view>
		<view class="release" v-for="(item,index) in findsList" :key="index">
			<view class="releaseTime flex flex-jc flex-vc" >
				<text>{{item.showTime}}</text>
			</view>
			<view class="myRelease flex flex-jc">
				<image :src="item.dynamicImg" mode=""></image>
			</view>
			
			<view class="likes-comments">
				<!-- 点赞 -->
				<view class="likes" @tap="toLikeList(item)">
					<view class="flex flex-vc width-80 flex-jsb">
						<view class="height-50">
							<image src="../../../static/img/heart.png" mode="" v-if="item.likeAction"></image>
							<image src="../../../static/img/heart2.png" mode="" v-else></image>
						</view>
						<span class="inline-block width-20">{{item.likesNum}}</span>
					</view>
				</view>
				<!-- 评论 -->
				<view class="comments" @tap="toCommentList">
					<view class="flex flex-vc width-80 flex-jsb">
						<view class="height-50">
							<image src="../../../static/img/comment.png" mode=""></image>
						</view>
						<span class="inline-block width-20">{{item.commentsNum}}</span>
					</view>
				</view>
			</view>
		</view>
		
	</view>
</template>

<script>
	// 请求抽取
	import request from '@/request/request.js';
	
	import {mapState,mapMutations} from 'vuex';
	export default {
		mounted() {
			// 根据时间排序
			this.findsList.sort((a,b)=>b.time-a.time);
		},
		beforeUpdate() {
			// 根据时间排序
			this.findsList.sort((a,b)=>b.time-a.time);
		},
		data() {
			return {
				findsList:[
					// {
					// 	time:'今天',
					// 	imgUrl:'../../../static/img/friendhead.png',
					// 	likesNum:19,
					// 	commentsNum:34
					// },
					// {
					// 	time:'2019-09-11',
					// 	imgUrl:'../../../static/img/finds_01.jpg',
					// 	likesNum:28,
					// 	commentsNum:15
					// },
					// {
					// 	time:'2019-02-18',
					// 	imgUrl:'../../../static/img/finds_02.jpeg',
					// 	likesNum:24,
					// 	commentsNum:12
					// }
				]
			}
		},
		computed:{
			...mapState(['userInfo'])
		},
		onLoad() {
			//从服务器获取自己发送的动态
			request.getLatestFinds((data)=>{
					if(data){
						// this.findsList.length=0;
						// console.log("好友圈已清空");
						data = data.filter((data)=>data.userId==this.userInfo.account);
						this.findsList=JSON.parse(JSON.stringify(data));
						console.log(data)
						console.log("好友圈已为最新");
					}
				});
			
		},
		methods: {
			toLikeList(e){
				// 点赞
				e.likeAction=!e.likeAction;
				e.likeAction ? e.likesNum-- : e.likesNum++;
			},
			toCommentList(){
				uni.navigateTo({
					url: '../../findsSubpackage/comments/comments',
					success: res => {},
					fail: () => {},
					complete: () => {}
				});
			}
		}
	}
</script>

<style>
.release{
	width: 100%;
	border-bottom: 1px solid #DDDDDD;
	padding: 20upx 0;
}
.releaseTime{
	width: 100%;
	height: 70upx;
	font-size: 30upx;
}
.myRelease image{
	width: 100%;
}
.likes-comments {
		height: 70upx;
		width: 100%;
		display: flex;
		justify-content: space-between;
	}

	.likes {
		display: flex;
		justify-content: center;
		align-items: center;
		width: 50%;
		height: 100%;
	}

	.likes image {
		width: 50upx;
		height: 50upx;
	}

	.comments {
		display: flex;
		justify-content: center;
		align-items: center;
		width: 50%;
		height: 100%;
	}

	.comments image {
		width: 50upx;
		height: 50upx;
	}
</style>
