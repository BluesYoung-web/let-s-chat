<template>
<!-- 对话页面 -->
<view>	
	<view class="conversationContent">
		<view class="messageTime">
			<text>刚刚</text>
		</view>
		<view class="message friendMessage">
			<view class="messageHead" @tap="toFriendInfo">
				<image src="../../static/img/avatar.png" mode=""></image>
			</view>
			<view class="messageContent">
				<text>今天晚上8点，五排组起来</text>
			</view>
		</view>
		<view class="message myMessage">
			<view class="messageContent" style="background-color: #95ec69;">
				<text>没问题</text>
			</view>
			<view class="messageHead" @tap="toMyInfo">
				<image src="../../static/img/avatar.png" mode=""></image>
			</view>
		</view>
	</view>
	<!-- 底部文字语言输入框 -->
	<view class="">
		<view class="conversationBottom" :style="'bottom: '+ bottom +'upx'">
			<!-- 语音消息按钮 -->
			<view class="voice" @tap="toStartRecord()" >
				<image src="../../static/img/voice.png" mode=""></image>
			</view>
			<!-- 消息输入框 -->
			<view class="keyboardInput" >
				<!-- 文字输入 -->
				<textarea auto-height="true" v-show="inputActive" type="text" @tap="inputFocus"/>
				<!-- 语音输入 -->
				<button v-show="voiceActive" type="default"  @longpress="startRecord" @touchend="endRecord">按 住 说 话</button>				
			</view>
			<!-- 表情键盘按钮 -->
			<view class="faces" @tap="showFacesBox()">
				<image src="../../static/img/face.png" mode=""></image>
			</view>
			<!-- 消息发送按钮 -->
			<view class="messageSend">
				<image src="../../static/img/send.png" mode=""></image>
			</view>
		</view>
		<!-- 表情键盘 -->
		<view class="facesBox" v-show="show">
			<!-- 表情类型 -->
			<view class="type flex flex-vc" >
				<view v-for="(items,index) in facesType" :key="index" @tap="showFaces(index)">
					<image :src="items.imgUrl" mode=""></image>
				</view>
			</view>
			<!-- 表情内容 -->
			<view class="facesContent">					
				<scroll-view v-show="index===0" scroll-y="true" class="scroll-Y" style="height: 400upx;">
					<view id="demo1" class="scroll-view-item uni-bg-red" style="height: 600upx;">表情区域1</view>
				</scroll-view>
				<scroll-view v-show="index===1" scroll-y="true" class="scroll-Y" style="height: 400upx;">
					<view id="demo1" class="scroll-view-item uni-bg-red" style="height: 600upx;">表情区域2</view>
				</scroll-view>
			</view>
		</view>
	</view>
	<!-- 取消语音弹框 -->
	<view class="cancelVoice" v-show="pressActive">
		<view class="flex flex-jc flex-vc" style="width: 100%;height: 200upx;">
			<image src="../../static/img/cancelVoice.png" mode=""></image>
		</view>	
		<view class="flex flex-jc" style="width: 100%;height: 50upx;">
			<text>手指松开，取消发送</text>
		</view>		
	</view>
</view>
</template>

<script>
	//获取录音权限相关
	const recorderManager = uni.getRecorderManager();
	const innerAudioContext = uni.createInnerAudioContext();
	
	innerAudioContext.autoplay = true;
	import uniSegmentedControl from "@/components/uni-segmented-control/uni-segmented-control.vue"
	export default{
		components: {uniSegmentedControl},
		data(){
			return{
				index:0,  //初始表情类型
				pressActive:false, //是否弹出语音取消框
				bottom:0,  //键盘高度后面获取
				show:false,  //表情键盘是否出现
				inputActive:true, //语音输入与文字输入切换
				voiceActive:false,
				text: 'uni-app',
				voicePath: '',
				facesType:[  //表情类型列表
					{
						num:1,
						imgUrl:'../../static/img/comment.png',
					},
					{
						num:2,
						imgUrl:'../../static/img/comment.png',
					}
				]
			}
		},
		onLoad() {  //获取录音权限相关
			let self = this;
			recorderManager.onStop(function (res) {
			console.log('recorder stop' + JSON.stringify(res));
			self.voicePath = res.tempFilePath;
			});
		},
		methods:{
			//显示不同表情类型
			showFaces(index){
				this.index=index;
			},
			//从表情键盘恢复普通键盘输入
			inputFocus(){
				if(this.bottom==600){
					this.show=false;
					this.bottom=0;
				}
			},
			//显示表情键盘
			showFacesBox(){
				if(this.show==false){
					this.voiceActive=false;
					this.inputActive=true;
					this.show=true;
					this.bottom=600;
				}else if(this.show==true){
					this.show=false;
					this.bottom=0;
				}				
			},
			//前往朋友资料页面
			toFriendInfo:function(){
				uni.navigateTo({
					url: '../addressSubpackage/friendsInfo/friendsInfo',
					success: res => {},
					fail: () => {},
					complete: () => {}
				});
			},
			//前往我的界面
			toMyInfo:function(){
				uni.navigateTo({
					url: '../mySubpackage/myInformation/myInformation',
					success: res => {},
					fail: () => {},
					complete: () => {}
				});
			},
			//点击录音图标显示开始录音按钮
			toStartRecord: function(){
				if(this.voiceActive==false){
					this.voiceActive=true;
					this.inputActive=false;
					this.show=false;
					this.bottom=0;
				}else if(this.voiceActive==true){
					this.voiceActive=false;
					this.inputActive=true
				}
			},
			// 长按开始录音，取消录音提示框出现
			startRecord() {
				this.pressActive=true;
				console.log('开始录音');			
				recorderManager.start();
			},
			// 松开手指，录音结束，取消录音提示框消失
			endRecord() {
				this.pressActive=false;
				console.log('录音结束');
				recorderManager.stop();
			}			
		}
	}
</script>

<style>
	.cancelVoice{
		width: 250upx;
		height: 250upx;
		color: #FFFFFF;
		font-size: 25upx;
		background-color: #edf0f2;
		position: fixed;
		bottom: 500upx;
		left: 250upx;
		z-index: 5;
	}
	.cancelVoice image{
		width: 200upx;
		height: 200upx;
	}
	.type{
		background-color: #FFFFFF;
	}
	.type image{
		width: 80upx;
		height: 80upx;
		border: 5upx solid #FFFFFF ;
		border-radius: 30%;
	}
	.type image:hover{
		background-color: #edf0f2;
	}
	.facesBox{
		width: 100%;
		height: 600upx; //后期与键盘高度统一
		background-color: #edf0f2;
		position: absolute;
		bottom: 0;
	}
	.messageTime{
		display: flex;
		justify-content: center;
		align-items: center;
		height: 60upx;
		width: 100%;
	}
	.messageTime text{
		font-size: 20upx;
		color: #4d6774;
	}
	.message{
		width: 100%;
		display: flex;
		border-bottom: 20upx solid #FFFFFF;
	}
	.friendMessage{
		justify-content: flex-start;
		padding-right: 200upx;
	}
	.myMessage{
		justify-content: flex-end;
		padding-left: 200upx;
	}
	.messageContent{
		background-color: #edf0f2;
		display: flex;
		border-radius: 10upx;
	}
	.messageContent text{
		font-size: 25upx;
		margin: 20upx 30upx;
		
	}
	.messageHead{
		display: flex;
		justify-content: center;
		padding: 0 20upx;
	}
	.messageHead image{
		width: 80upx;
		height: 80upx;
	}
	.conversationBottom{
		position: fixed;
		z-index: 1;
		width: 100%;
		/* height:100upx; */
		display: flex;
		align-items: flex-end;
		background-color: #344955;
		padding-top: 10upx;
		padding-bottom: 10upx;
	}
	.voice{
		width: 120upx;
		display: flex;
		justify-content: center;
	}
	.voice image{
		width: 60upx;
		height: 60upx;
	}
	.keyboardInput{
		background-color: #FFFFFF;
		border: 1upx solid #344955;
		width: 400upx;
		/* height: auto; */
		border-radius: 15upx;
		display: flex;
		align-items: center;
		justify-content: center;
	}
	.keyboardInput textarea{
		width: 400upx;
		min-height: 40upx;
		max-height: 150upx;
		font-size: 30upx;
		padding-top: 15upx;
		padding-bottom: 15upx;
		/* line-height: 65upx; */
	}
	.keyboardInput button{
		width: 400upx;
		height: 65upx;
		line-height: 65upx;
	}
	.faces{
		width: 110upx;
		display: flex;
		justify-content: center;
	}
	.faces image{
		width: 70upx;
		height: 70upx;
	}
	.messageSend{
		height: 70upx;
		width: 70upx;
		border: 1upx solid #344955;
		border-radius: 50%;
		background-color: #f9aa33;	
		display: flex;
		justify-content: center;
		align-items: center;
	}
	.messageSend image{		
		height: 35upx;
		width: 35upx;
	}
</style>
